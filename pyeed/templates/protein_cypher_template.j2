{% set protein_node_label = "ProteinRecord" %}
{% set protein_identifier = protein_data.get('id', 'protein_id') %}

MERGE (protein:{{ protein_node_label }} {id: '{{ protein_identifier }}' })

{% if protein_data.get('name') %}
SET protein.name = '{{ protein_data['name'] | replace("'", "\\'") }}'
{% endif %}

{% if protein_data.get('sequence') %}
SET protein.sequence = '{{ protein_data['sequence'] | replace("'", "\\'") }}'
{% endif %}

{% if protein_data.get('seq_length') is not none %}
SET protein.seq_length = {{ protein_data['seq_length'] }}
{% endif %}

{% if protein_data.get('ec_number') %}
SET protein.ec_number = '{{ protein_data['ec_number'] | replace("'", "\\'") }}'
{% endif %}

{% if protein_data.get('mol_weight') is not none %}
SET protein.mol_weight = {{ protein_data['mol_weight'] }}
{% endif %}

{% if protein_data.get('embedding') %}
SET protein.embedding = {{ protein_data['embedding'] }}
{% endif %}

{% if protein_data.get('structure_ids') %}
{% for structure_id in protein_data['structure_ids'] %}
MERGE (structure_{{ loop.index }}:Structure {id: '{{ structure_id | replace("'", "\\'") }}' })
MERGE (protein)-[:HAS_STRUCTURE]->(structure_{{ loop.index }})
{% endfor %}
{% endif %}

{% if protein_data.get('organism') %}
MERGE (organism:Organism {taxonomy_id: {{ protein_data['organism'].get('taxonomy_id', 0) }}, name: '{{ protein_data['organism'].get('name', '') | replace("'", "\\'") }}' })
MERGE (protein)-[:ORIGINATES_FROM]->(organism)
{% for key, value in protein_data['organism'].items() %}
{% if value %}
SET organism.{{ key }} = '{{ value | replace("'", "\\'") }}'
{% endif %}
{% endfor %}
{% endif %}

{% if protein_data.get('sites') %}
{% for site in protein_data['sites'] %}
MERGE (site_{{ loop.index }}:Site {id: '{{ protein_identifier }}_site_{{ loop.index }}' })
SET site_{{ loop.index }}.positions = {{ site.get('positions', []) }}
MERGE (protein)-[:HAS_SITE]->(site_{{ loop.index }})
{% endfor %}
{% endif %}

{% if protein_data.get('regions') %}
{% for region in protein_data['regions'] %}
MERGE (region_{{ loop.index }}:Region {id: '{{ protein_identifier }}_region_{{ loop.index }}' })
SET region_{{ loop.index }}.start = {{ region.get('start', 0) }},
    region_{{ loop.index }}.end = {{ region.get('end', 0) }}
MERGE (protein)-[:HAS_REGION]->(region_{{ loop.index }})
{% endfor %}
{% endif %}

{% if protein_data.get('region_sets') %}
{% for region_set in protein_data['region_sets'] %}
MERGE (region_set_{{ loop.index }}:RegionSet {id: '{{ protein_identifier }}_regionset_{{ loop.index }}' })
{% if region_set.get('regions') %}
{% for region in region_set['regions'] %}
MERGE (region_{{ loop.index }}_{{ loop.index0 }}:Region {id: '{{ protein_identifier }}_region_{{ loop.index }}_{{ loop.index0 }}' })
SET region_{{ loop.index }}_{{ loop.index0 }}.start = {{ region.get('start', 0) }},
    region_{{ loop.index }}_{{ loop.index0 }}.end = {{ region.get('end', 0) }}
MERGE (region_set_{{ loop.index }})-[:CONTAINS_REGION]->(region_{{ loop.index }}_{{ loop.index0 }})
{% endfor %}
{% endif %}
MERGE (protein)-[:HAS_REGION_SET]->(region_set_{{ loop.index }})
{% endfor %}
{% endif %}

{% if protein_data.get('coding_sequence') %}
{% for region in protein_data['coding_sequence'] %}
MERGE (coding_region_{{ loop.index }}:Region {id: '{{ protein_identifier }}_coding_sequence_{{ loop.index }}' })
SET coding_region_{{ loop.index }}.start = {{ region.get('start', 0) }},
    coding_region_{{ loop.index }}.end = {{ region.get('end', 0) }}
MERGE (protein)-[:HAS_CODING_SEQUENCE]->(coding_region_{{ loop.index }})
{% endfor %}
{% endif %}

RETURN protein
